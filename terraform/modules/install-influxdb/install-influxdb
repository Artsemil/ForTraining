#!/usr/bin/env bash

set -e

# Import the appropriate bash commons libraries
readonly BASH_COMMONS_DIR="/opt/gruntwork/bash-commons"
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

readonly DEFAULT_INFLUXDB_VERSION="1.7.6"
readonly DEFAULT_INFLUXDB_DISTRIBUTION="oss"

readonly DEFAULT_TEMP_META_CONFIG_FILE_PATH="/tmp/config/influxdb-meta.conf"
readonly DEFAULT_TEMP_DATA_CONFIG_FILE_PATH="/tmp/config/influxdb.conf"
readonly DEFAULT_TEMP_OSS_CONFIG_FILE_PATH="/tmp/config/influxdb.conf"
readonly DEFAULT_META_CONFIG_FILE_PATH="/etc/influxdb/influxdb-meta.conf"
readonly DEFAULT_DATA_CONFIG_FILE_PATH="/etc/influxdb/influxdb.conf"
readonly DEFAULT_OSS_CONFIG_FILE_PATH="/etc/influxdb/influxdb.conf"

readonly DEFAULT_INFLUXDB_DIR="/opt/influxdb"
readonly DEFAULT_INFLUXDB_BIN_DIR="$DEFAULT_INFLUXDB_DIR/bin"

readonly INFLUXDB_COMMONS_SRC_DIR="$SCRIPT_DIR/../influxdb-commons"
readonly INFLUXDB_COMMONS_INSTALL_DIR="/opt/influxdb-commons"

if [[ ! -d "$BASH_COMMONS_DIR" ]]; then
  echo "ERROR: this script requires that bash-commons is installed in $BASH_COMMONS_DIR. See https://github.com/gruntwork-io/bash-commons for more info."
  exit 1
fi

source "$BASH_COMMONS_DIR/assert.sh"
source "$BASH_COMMONS_DIR/log.sh"
source "$BASH_COMMONS_DIR/os.sh"

function print_usage {
  echo
  echo "Usage: install-influxdb [options]"
  echo
  echo "This script can be used to install InfluxDB Enterprise and its dependencies. This script has been tested with Ubuntu 18.04."
  echo
  echo "Options:"
  echo
  echo -e "  --distribution\tThe distribution of InfluxDB (oss/enterprise) to install. Default: $DEFAULT_INFLUXDB_DISTRIBUTION."
  echo -e "  --version\t\tThe version of InfluxDB Enterprise to install. Default: $DEFAULT_INFLUXDB_VERSION."
  echo -e "  --oss-config-file\tPath to a templated oss configuration file. Used for oss distribution. Default: $DEFAULT_TEMP_OSS_CONFIG_FILE_PATH"
  echo -e "  --meta-config-file\tPath to a templated meta node configuration file. Used for enterprise distribution. Default: $DEFAULT_TEMP_META_CONFIG_FILE_PATH"
  echo -e "  --data-config-file\tPath to a templated data node configuration file. Used for enterprise distribution. Default: $DEFAULT_TEMP_DATA_CONFIG_FILE_PATH"

  echo
  echo "Examples:"
  echo
  echo "  install-influxdb  --version $DEFAULT_INFLUXDB_VERSION --distribution enterprise --meta-config-file $DEFAULT_TEMP_META_CONFIG_FILE_PATH --data-config-file $DEFAULT_TEMP_DATA_CONFIG_FILE_PATH"
  echo "  install-influxdb  --version $DEFAULT_INFLUXDB_VERSION --oss-config-file $DEFAULT_TEMP_OSS_CONFIG_FILE_PATH"
}

function install_influxdb_enterpise_on_ubuntu {
  local -r version="$1"

  log_info "Installing InfluxDB Enterprise Meta service"
  sudo wget "https://dl.influxdata.com/enterprise/releases/influxdb-meta_${version}-c${version}_amd64.deb"
  sudo dpkg -i "influxdb-meta_${version}-c${version}_amd64.deb"

  log_info "Installing InfluxDB Enterprise Data service"
  sudo wget "https://dl.influxdata.com/enterprise/releases/influxdb-data_${version}-c${version}_amd64.deb"
  sudo dpkg -i "influxdb-data_${version}-c${version}_amd64.deb"
}

function install_influxdb_oss_on_ubuntu {
  local -r version="$1"

  log_info "Installing InfluxDB OSS"
  sudo wget "https://dl.influxdata.com/influxdb/releases/influxdb_${version}_amd64.deb"
  sudo dpkg -i "influxdb_${version}_amd64.deb"
}

function install_influxdb_scripts {
  local -r dest_dir="$1"
  local -r distribution="$2"

  local run_script=""

  if [[ "$distribution" == "oss" ]]; then
    run_script="run-influxdb-oss"
  else
    run_script="run-influxdb-enterprise"
  fi


  local -r run_influxdb_src="$SCRIPT_DIR/../run-influxdb/$run_script"
  local -r run_influxdb_dest="$dest_dir/$run_script"

  log_info "Copying $run_influxdb_src to $run_influxdb_dest"
  sudo mkdir -p "$dest_dir"
  sudo cp "$run_influxdb_src" "$run_influxdb_dest"
}

function install_influxdb_commons {
  local -r src_dir="$1"
  local -r dest_dir="$2"

  log_info "Copying $src_dir to $dest_dir"
  sudo cp -r "$src_dir" "$dest_dir"
}

function install_influxdb {
  local version="$DEFAULT_INFLUXDB_VERSION"
  local distribution="$DEFAULT_INFLUXDB_DISTRIBUTION"
  local meta_config_file="$DEFAULT_TEMP_META_CONFIG_FILE_PATH"
  local data_config_file="$DEFAULT_TEMP_DATA_CONFIG_FILE_PATH"
  local oss_config_file="$DEFAULT_TEMP_OSS_CONFIG_FILE_PATH"

  while [[ $# > 0 ]]; do
    local key="$1"

    case "$key" in
      --help)
        print_usage
        exit
        ;;
      --version)
        assert_not_empty "$key" "$2"
        version="$2"
        shift
        ;;
      --distribution)
        assert_not_empty "$key" "$2"
        distribution="$2"
        shift
        ;;
      --oss-config-file)
        assert_not_empty "$key" "$2"
        oss_config_file="$2"
        shift
        ;;
      --meta-config-file)
        assert_not_empty "$key" "$2"
        meta_config_file="$2"
        shift
        ;;
      --data-config-file)
        assert_not_empty "$key" "$2"
        data_config_file="$2"
        shift
        ;;
      *)
        echo "Unrecognized argument: $key"
        print_usage
        exit 1
        ;;
    esac

    shift
  done

  assert_is_installed "sudo"
  assert_is_installed "wget"

  assert_value_in_list "--distribution" "$distribution" "oss" "enterprise"

  # Install either oss or enterprise version
  if [[ "$distribution" == "oss" ]]; then
    install_influxdb_oss_on_ubuntu "$version"
    sudo mv "$oss_config_file" "$DEFAULT_OSS_CONFIG_FILE_PATH"
    # Change owner of configuration files to influxdb user
    sudo chown -R influxdb:influxdb "$(dirname "${DEFAULT_OSS_CONFIG_FILE_PATH}")"
  else
    install_influxdb_enterpise_on_ubuntu "$version"
    sudo mv "$meta_config_file" "$DEFAULT_META_CONFIG_FILE_PATH"
    sudo mv "$data_config_file" "$DEFAULT_DATA_CONFIG_FILE_PATH"
    # Change owner of configuration files to influxdb user
    sudo chown -R influxdb:influxdb "$(dirname "${DEFAULT_META_CONFIG_FILE_PATH}")"
    # Meta service is only installed with enterprise distribution
    sudo systemctl disable influxdb-meta.service
  fi

  # Disable the installed systemd services to prevent them from starting up on boot
  # We're re-enabling the service as part of the startup script, where we fill in proper configuration
  # values and register the nodes in the cluster
  sudo systemctl disable influxdb.service

  install_influxdb_scripts "$DEFAULT_INFLUXDB_BIN_DIR" "$distribution"
  install_influxdb_commons "$INFLUXDB_COMMONS_SRC_DIR" "$INFLUXDB_COMMONS_INSTALL_DIR"
}

install_influxdb "$@"